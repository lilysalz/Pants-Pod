volumes:
    postgres-data:
        external: true
    pg-admin:
        external: true
services:
    postgres:
        image: postgres:14.5-bullseye
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: secret
            POSTGRES_USER: example_user
            POSTGRES_DB: example_db
        ports:
            - 15432:5432
    fastapi:
        environment:
            CORS_HOST: http://localhost:5173
            DATABASE_URL: postgresql://example_user:secret@postgres/example_db
            CLIENT_ID: ${CLIENT_ID}
            CLIENT_SECRET: ${CLIENT_SECRET}
            SIGNING_KEY: ${SIGNING_KEY}
        build:
            context: api
            dockerfile: Dockerfile.dev
        ports:
            - 8000:8000
        #user: "${UID}:1000" # on macOS and Linux, replace this with your real user id and group id
        volumes:
            - ./api:/app
    ghi:
        image: node:lts-bullseye
        command: /bin/bash run.sh
        working_dir: /app
        #user: "1000:1000" # on macOS and Linux, replace this with your real user id and group id
        volumes:
            - ./ghi:/app
        ports:
            - "5173:5173"
        environment:
            NODE_ENV: developement
            HOST: "0.0.0.0"
            VITE_API_HOST: ${VITE_API_HOST}
            VITE_BASE: ${VITE_BASE}
    ### Uncomment code to add pg-admin, used for local db troubleshooting
    ### Don't forget to add:
    ### PG_DEFAULT_EMAIL=pant@pants.org
    ### PG_DEFAULT_PASS=somePassword
    ### To your top-level .env file and run command `docker volume create pg-admin`
    # pg-admin:
    #     image: dpage/pgadmin4
    #     volumes:
    #         - pg-admin:/var/lib/pgadmin
    #     ports:
    #         - 8082:80
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: ${PG_DEFAULT_EMAIL}
    #         PGADMIN_DEFAULT_PASSWORD: ${PG_DEFAULT_PASS}
    #         PGADMIN_DISABLE_POSTFIX: 1
